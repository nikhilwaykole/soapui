<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="c090170c-ee1a-4222-978e-e2e101a95912" activeEnvironment="Default" name="VideoConv-Async" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="25ef23c8-21f6-40ae-a5d0-865c86a202da" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:9876" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://ULTP-532:8080/</con:endpoint><con:endpoint>http://ULTP-532:8089/</con:endpoint><con:endpoint>http://localhost:9876</con:endpoint></con:endpoints><con:resource name="VideoConvertTask" path="/videoconvert/task" id="9e3a08c4-15e4-47b7-9fe0-4e702ec7f939"><con:settings/><con:parameters/><con:method name="videoConversion" id="d9844771-06c0-4467-858a-65e6ab1964ea" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>quote-task</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:task="http://localhost/videoconvert/task">task:Response</con:element></con:representation><con:request name="startVideoConversion" id="7953758a-30e7-4adc-993c-8e5a8c93679e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:9876</con:endpoint><con:request>{  
   "video1":{  
      "name":"test1.mov",
      "convertto":"mp4"
   },
   "video2":{  
      "name":"test2.flv",
      "convertto":"mov"
   }
}</con:request><con:originalUri>http://localhost/videoconvert/task</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="6128f25b-2b5b-4409-a96d-9a6a2fe113ba" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:9876" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://ULTP-532:8080/</con:endpoint><con:endpoint>http://ULTP-532:9876/</con:endpoint><con:endpoint>http://localhost:9876</con:endpoint></con:endpoints><con:resource name="videoConvertStatusTask" path="/videoconvert/task/{id}" id="79e3ea70-8ccb-4a1b-9ebd-963959cce78b"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="getVideoConvertStatus" id="0e6daac1-c3cf-4dc9-9258-41caca621b68" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:loc="http://localhost/">loc:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="videoConvertStatusRequest" id="9761a072-30f1-4a48-9cea-e0252eda9e01" mediaType="application/json"><con:settings/><con:endpoint>http://localhost:9876</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="60491723-89f1-4197-9998-aff264ea8a41" name="VideoTransformationTS"><con:description>TestSuite generated for REST Service [http://localhost:9876]</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="daeb951a-31f3-4930-a853-3e35893b39a9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateAsyncVideoTransformationTC" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="StartConversion" id="e89ae1cd-48cc-4425-a802-bb6990723135"><con:settings/><con:config service="http://localhost:9876" resourcePath="/videoconvert/task" methodName="videoConversion" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="StartConversion" id="7953758a-30e7-4adc-993c-8e5a8c93679e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:9876</con:endpoint><con:request>{  
   "video1":{  
      "name":"test1.mov",
      "convertto":"mp4"
   },
   "video2":{  
      "name":"test2.flv",
      "convertto":"mov"
   }
}</con:request><con:originalUri>http://localhost/videoconvert/task</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetConvStatus" id="382d9c00-0eeb-4b5e-a221-4caec0166173"><con:settings/><con:config service="http://localhost:9876" resourcePath="/videoconvert/task/{id}" methodName="getVideoConvertStatus" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetConvStatus" id="9761a072-30f1-4a48-9cea-e0252eda9e01" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:9876</con:endpoint><con:request/><con:originalUri>http://localhost/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="123" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="3acaea76-94ed-4e56-a8d4-1cbb3c448187"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="8212b62f-6aec-46f9-827c-50358b54b53a"><con:settings/><con:config><script>import groovy.json.JsonSlurper
jsonSlurper = new JsonSlurper()
def response = context.expand('${GetConvStatus#Response}')
jsonObj = jsonSlurper.parseText(response)
log.info "video conv status :" + jsonObj.status
if(jsonObj.status == "PROCESSING"){
	log.info "Getting conversion status again..."
	testRunner.gotoStepByName("GetConvStatus")
}

</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:restMockService id="5b2ae598-204a-42ab-93d4-68bb4ad4f5a3" port="9876" path="/" host="ULTP-532" name="VideoConversionMockService" docroot=""><con:settings/><con:properties/><con:restMockAction name="/videoconvert/task" method="POST" resourcePath="/videoconvert/task" id="14f99fba-b1f8-41e5-8441-62bdfea2e274"><con:settings/><con:defaultResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">VideoConvStartedResponse</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>def taskId="${new Random().nextInt(100)}"
requestContext.taskIdNo = taskId

</con:dispatchPath><con:response name="VideoConvStartedResponse" id="8489d495-3f2f-44b5-b099-aefeb1051f00" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{  
   "videoConvTask":{  
      "id":"${taskIdNo}",
      "status":"PROCESSING",
      "href":"http://localhost:8080/videoconvert/task/${taskIdNo}"
   }
}</con:responseContent></con:response></con:restMockAction><con:restMockAction name="/videoconvert/task/" method="GET" resourcePath="/videoconvert/task/" id="d64f0f79-0553-4af6-bfb1-4a6b44a6e48e"><con:settings/><con:defaultResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ProcessingResponse</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>def randNo = "${new Random().nextInt(5)}"
log.info "Random Number is " + randNo

if(randNo == "2"){
	return "CompleteResponse"
}else{
	return "ProcessingResponse"
}



/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="ProcessingResponse" id="06ed16b5-8054-433d-9fc2-3fb2a2a08b0f" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"status":"PROCESSING"}</con:responseContent></con:response><con:response name="CompleteResponse" id="5405e6bd-83c0-4ea4-9be3-8e0a38d9fd17" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{"status":"COMPLETE"}</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties><con:property><con:name>sum1</con:name><con:value>78</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>